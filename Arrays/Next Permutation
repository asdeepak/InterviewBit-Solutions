void Solution::nextPermutation(vector<int> &A) {
    
    int n = A.size();
    if(n < 2)
        return;
    
    for(int i = n-1;i >= 0;--i){
        if(i == 0){
          reverse(A.begin(),A.end());return;  
        } 
        
        if(A[i] <= A[i-1]) continue;
        else break;
    }
    if(A[n-1] > A[n-2] ){
        swap(A[n-1],A[n-2]);
           return;
    }
    
    int pos;
    for(int i = n-1;i >= 0;--i){
        if(A[i] > A[i-1]){
            pos = i-1;
            break;
        }
    }
    int temp = A[pos],tpos;
    for(int i = pos;i<n;++i)
        if(temp < A[i])
            tpos = i;
            
    swap(A[pos],A[tpos]);
        
        
    sort(A.begin()+pos+1,A.end());
    return;
}
